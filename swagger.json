{
  "openapi": "3.0.3",
  "info": {
    "title": "History API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/history": {
      "post": {
        "summary": "Create a new user history",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHistoryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "History created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/leaderboard": {
      "get": {
        "summary": "Get top 5 users with highest scores",
        "responses": {
          "200": {
            "description": "List of top 5 users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/rank": {
      "post": {
        "summary": "Get the rank of a specific user based on score",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRankRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User rank result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRankResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/user/{username}": {
      "get": {
        "summary": "Get user's public info",
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "schema": {
              "type": "string"
            },
            "description": "The name of user to return",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublicInfoResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/sign-in": {
      "post": {
        "summary": "Signing in with username and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInInfo"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Username or password is incorrect.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "500": {
              "description": "Unexpected error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/sign-up": {
      "post": {
        "summary": "Signing up with username, email and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpInfo"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Username or email is already taken.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/sign-out": {
      "delete": {
        "summary": "Signing out",
        "responses": {}
      }
    },
    "/api/auth/verify": {
      "get": {
        "summary": "User Verification",
        "responses": {}
      }
    },
    "/api/profile": {
      "patch": {
        "summary": "Edit profile information",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProfileRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Profile edited successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateHistoryRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Yasaman"
          },
          "score": {
            "type": "integer",
            "example": 450
          }
        },
        "required": ["username", "score"]
      },
      "CreateHistoryResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "History created successfully"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "History record creation time",
            "example": "2025-07-19T15:30:00Z"
          }
        },
        "required": ["status", "message"]
      },
      "UserRankRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Yasaman"
          }
        },
        "required": ["username"]
      },
      "UserScore": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Yasaman"
          },
          "score": {
            "type": "integer",
            "example": 450
          }
        },
        "required": ["username", "score"]
      },
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Ali"
          },
          "email": {
            "type": "string",
            "example": "Ali@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "123"
          },
          "histories": {
            "type": "array",
            "example": []
          }
        },
        "required": ["username", "score"]
      },
      "UserRank": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Yasaman"
          },
          "score": {
            "type": "integer",
            "example": 450
          },
          "rank": {
            "type": "integer",
            "example": 2
          }
        },
        "required": ["username", "score", "rank"]
      },
      "LeaderboardResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Top 5 scores retrieved"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserScore"
            },
            "example": [
              {
                "username": "Yasaman",
                "score": 450
              },
              {
                "username": "Ali",
                "score": 400
              },
              {
                "username": "Reza",
                "score": 350
              },
              {
                "username": "Mohsen",
                "score": 300
              },
              {
                "username": "Bijan",
                "score": 250
              }
            ]
          }
        },
        "required": ["status", "message", "data"]
      },
      "UserPublicInfoResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "User's public info fetched successfully."
          },
          "data": {
            "type": "object",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "example": {
              "username": "Ali",
              "email": "Ali@gmail.com"
            }
          }
        },
        "required": ["status", "message", "data"]
      },
      "UserRankResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "User rank retrieved"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRank"
            },
            "example": [
              {
                "username": "Yasaman",
                "score": 450,
                "rank": 2
              }
            ]
          }
        },
        "required": ["status", "message", "data"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "error"
          },
          "message": {
            "type": "string",
            "example": "Validation failed"
          },
          "details": {
            "type": "string",
            "example": "Username is required"
          }
        },
        "required": ["status", "message"]
      },
      "NotFoundError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "error"
          },
          "message": {
            "type": "string",
            "example": "Not Found"
          },
          "details": {
            "type": "string",
            "example": "User not found"
          }
        },
        "required": ["status", "message"]
      },
      "SignInInfo": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "bijanprogrammer"
          },
          "password": {
            "type": "string",
            "example": "1001"
          }
        },
        "required": ["username", "password"]
      },
      "SignUpInfo": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "bijanprogrammer"
          },
          "email": {
            "type": "string",
            "example": "bijanprogrammer@codectiveorg.ir"
          },
          "password": {
            "type": "string",
            "example": "1001"
          }
        },
        "required": ["username", "email", "password"]
      },
      "EditProfileRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "bijanprogrammer"
          },
          "email": {
            "type": "string",
            "example": "bijanprogrammer@codectiveorg.ir"
          },
          "password": {
            "type": "string",
            "example": "1001"
          }
        },
        "required": []
      },
      "EditProfileResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Profile updated successfully."
          }
        }
      }
    }
  }
}
